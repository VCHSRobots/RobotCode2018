// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4415.RetroFinal.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4415.RetroFinal.Robot;

/**
 *
 */
public class ClimberDefault extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public ClimberDefault() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.climber);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	
    	if (Robot.oi.getDriverJoystick().getPOV() == -1) {
    		Robot.climber.climbOff();
    		
    	} else {
    		Robot.climber.climbUpPOV();
    		Robot.climber.climbDownPOV();
		
    	}
    	
    	if (Robot.oi.getManipulatorJoystick().getRawAxis(1) < .2 && Robot.oi.getManipulatorJoystick().getRawAxis(1) > -.2) {
    		Robot.climber.climbOff();
    	} else { 
    		Robot.climber.climbUpAxis();
    		Robot.climber.climbDownAxis();
    	}
    	
    	/*if (Robot.oi.getDriverJoystick().getPOV() == 0) {
    		Robot.climber.climbUp();
    	}
    	
    	if (Robot.oi.getDriverJoystick().getPOV() == 180) {
    		Robot.climber.climbDown();
    	}*/
    	
    	/*if (Robot.oi.getDriverJoystick().getRawAxis(2) > .25) {
    		Robot.climber.climbUp();
    	} else if (Robot.oi.getManipulatorJoystick().getRawAxis(2) < .22) {
    		Robot.climber.climbOff();
    	}*/
    	
    	/*if (Robot.oi.getManipulatorJoystick().getRawAxis(3) > .25) {
    		Robot.climber.climbDown();
    	} else if (Robot.oi.getManipulatorJoystick().getRawAxis(3) < .22) {
    		Robot.climber.climbOff();
    	}*/
    	
    	/*if (Robot.oi.getManipulatorJoystick().getRawAxis(3) > .25) {
    		Robot.climber.climbDown();
    	} else if (Robot.oi.getManipulatorJoystick().getRawAxis(3) < .22) {
    		Robot.climber.climbOff();
    	}*/
    	
    	
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
