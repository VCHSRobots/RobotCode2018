// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4415.RetroFinal.subsystems;

import org.usfirst.frc4415.RetroFinal.Robot;
import org.usfirst.frc4415.RetroFinal.RobotMap;
import org.usfirst.frc4415.RetroFinal.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.DoubleSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Climber extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final WPI_TalonSRX climberMotor1 = RobotMap.climberclimberMotor1;
    private final WPI_TalonSRX climberMotor2 = RobotMap.climberclimberMotor2;
    private final DoubleSolenoid doubleSolenoid1 = RobotMap.climberDoubleSolenoid1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new ClimberDefault());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    
    public void climbUp() {
    	climberMotor1.set(1);
    	climberMotor2.set(1);
    }
    
    public void climbDown() {
    	climberMotor1.set(-1);
    	climberMotor2.set(-1);
    }
    
    public void climbOff() {
    	climberMotor1.set(0);
    	climberMotor2.set(0);
    }
    
    public void climbUpPOV() {
    	if (Robot.oi.getDriverJoystick().getPOV() == 0) {
    		climberMotor1.set(1);
    		climberMotor2.set(1);
    	}
    }
    
    public void climbDownPOV() {
    	if (Robot.oi.getDriverJoystick().getPOV() == 180) {
    		climberMotor1.set(-1);
    		climberMotor2.set(-1);
    	}
    }

	public void climbUpAxis() {
		if (Robot.oi.getManipulatorJoystick().getRawAxis(5) < -.35) {
			climberMotor1.set(-1);
	    	climberMotor2.set(-1);
		}
    	
    }
    
    public void climbDownAxis() {
    	if (Robot.oi.getManipulatorJoystick().getRawAxis(5) > .35) {
    		climberMotor1.set(1);
        	climberMotor2.set(1);
    	}
    	
    }
    
    public void climbPneuUp() {
    	doubleSolenoid1.set(DoubleSolenoid.Value.kReverse);
    }
    
    public void climbPneuDown() {
    	doubleSolenoid1.set(DoubleSolenoid.Value.kForward);
    }
    
}

