// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4415.Steam;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.RobotDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX pIDSubleftFront;
    public static WPI_TalonSRX pIDSubrightFront;
    public static WPI_TalonSRX pIDSubleftRear;
    public static WPI_TalonSRX pIDSubrightRear;
    public static RobotDrive pIDSubRobotDrive4;
    public static Encoder pIDSubQuadratureEncoder1;
    public static DoubleSolenoid pIDSubDoubleSolenoid1;
    public static WPI_TalonSRX pIDSub2TalonSRX1;
    public static Encoder pIDSub2QuadratureEncoder1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        pIDSubleftFront = new WPI_TalonSRX(7);
        
        
        pIDSubrightFront = new WPI_TalonSRX(2);
        
        
        pIDSubleftRear = new WPI_TalonSRX(6);
        
        
        pIDSubrightRear = new WPI_TalonSRX(3);
        
        
        pIDSubRobotDrive4 = new RobotDrive(pIDSubleftFront, pIDSubleftRear,
              pIDSubrightFront, pIDSubrightRear);
        
        pIDSubRobotDrive4.setSafetyEnabled(false);
        pIDSubRobotDrive4.setExpiration(0.1);
        pIDSubRobotDrive4.setSensitivity(0.5);
        pIDSubRobotDrive4.setMaxOutput(1.0);

        pIDSubQuadratureEncoder1 = new Encoder(1, 2, false, EncodingType.k4X);
        LiveWindow.addSensor("PIDSub", "Quadrature Encoder 1", pIDSubQuadratureEncoder1);
        pIDSubQuadratureEncoder1.setDistancePerPulse(1.0);
        pIDSubQuadratureEncoder1.setPIDSourceType(PIDSourceType.kRate);
        pIDSubDoubleSolenoid1 = new DoubleSolenoid(0, 0, 1);
        LiveWindow.addActuator("PIDSub", "Double Solenoid 1", pIDSubDoubleSolenoid1);
        
        pIDSub2TalonSRX1 = new WPI_TalonSRX(0);
        
        
        pIDSub2QuadratureEncoder1 = new Encoder(3, 4, false, EncodingType.k4X);
        LiveWindow.addSensor("PIDSub2", "Quadrature Encoder 1", pIDSub2QuadratureEncoder1);
        pIDSub2QuadratureEncoder1.setDistancePerPulse(1.0);
        pIDSub2QuadratureEncoder1.setPIDSourceType(PIDSourceType.kRate);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
