// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4415.Retro.commands;
import edu.wpi.first.wpilibj.RobotBase;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4415.Retro.Robot;
import org.usfirst.frc4415.Retro.RobotMap;

/**
 *
 */
public class AutoSwitch extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	
	long startTime = System.currentTimeMillis();

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public AutoSwitch() {
        setRunWhenDisabled(true);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.pIDRetroDrive);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {

    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    			
    			Robot.pIDRetroDrive.PIDLoop(2000);
    			
				/*Robot.pIDRetroDrive.driveForwardDistance(100, .5, .5, .2, true);
				
				Robot.pIDRetroDrive.turnLeftAngle(180, .7, .7, .6, true);
				
				Robot.pIDRetroDrive.turnRightAngle(180, .7, .7, .6, true);
				
				Robot.pIDRetroDrive.driveBackwardDistance(100, .5, .5, .2, true);
				
				Robot.pIDRetroDrive.turnLeftAngle(360, .7, .7, .6, true);
				
				Robot.pIDRetroDrive.driveForwardDistance(100, .5, .5, .2, true);
				
				Robot.pIDRetroDrive.turnRightAngle(180, .7, .7, .6, true);
				
				Robot.pIDRetroDrive.driveForwardDistance(100, .5, .5, .2, true);
				
				Robot.pIDRetroDrive.turnLeftAngle(180, .7, .7, .6, true);*/
			}
    

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return true;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	
    	Robot.pIDRetroDrive.motorsOff();
    	
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    	end();
    }
}
